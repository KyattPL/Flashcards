{"version":3,"sources":["components/LoginName.js","components/Header.js","components/Flashcard.js","components/Deck.js","components/LoginPage.js","components/SignUpPage.js","Routes.js","App.js","index.js"],"names":["LoginName","props","loggedStatus","Nav","className","user","Header","Navbar","bg","variant","expand","sticky","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Button","Form","inline","FormControl","type","placeholder","Flashcard","Card","Body","Title","Subtitle","Text","Deck","CardDeck","LoginPage","tryLoggingIn","email","password","fetch","body","JSON","stringify","pass","method","headers","then","res","text","result","changeLoggedStatus","handleSubmit","event","setState","validated","preventDefault","stopPropagation","form","currentTarget","checkValidity","elements","value","state","Container","noValidate","this","onSubmit","Group","controlId","Label","Control","required","Feedback","href","React","Component","SignUpPage","sendNewUser","nick","data","window","location","replace","origin","validateEmail","response","setCustomValidity","reportValidity","checkbox","name","Check","Input","Routes","console","log","exact","path","Row","App","prevState","isLoggedIn","username","checkCookie","setInterval","basename","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d672c09.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nfunction LoginName(props) {\r\n    return (\r\n        props.loggedStatus ?\r\n            <Nav className=\"navbar-text mr-3\">{props.user}</Nav>\r\n            : <Nav className=\"navbar-text mr-3\">Not logged in</Nav>\r\n    );\r\n}\r\n\r\nexport default LoginName;","import React from 'react';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport LoginName from './LoginName.js';\r\nimport '../styles/Header.css';\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\r\n            <Navbar.Brand as={Link} to=\"/\">Flashcards</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar\" />\r\n            <Navbar.Collapse id=\"responsive-navbar\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/about\">About</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/dashboard\">Dashboard</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/faq\">FAQ</Nav.Link>\r\n                </Nav>\r\n                <LoginName user={props.user} loggedStatus={props.loggedStatus} />\r\n                {props.loggedStatus ?\r\n                    <Button className=\"mr-3\" variant=\"outline-warning\">Log out</Button>\r\n                    : <Button className=\"mr-3\" variant=\"outline-success\" as={Link} to=\"/login\">Log in</Button>\r\n                }\r\n                <Form inline className=\"mt-2 mt-lg-0\">\r\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-2\" />\r\n                    <Button variant=\"outline-success\">Search</Button>\r\n                </Form>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction Flashcard() {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Title>Test</Card.Title>\r\n                <Card.Subtitle>Additional info</Card.Subtitle>\r\n                <Card.Text>Card info</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Flashcard;","import React from 'react';\r\n\r\nimport CardDeck from 'react-bootstrap/CardDeck';\r\n\r\nimport Flashcard from './Flashcard.js';\r\n\r\nfunction Deck() {\r\n    return (\r\n        <CardDeck>\r\n            <Flashcard />\r\n            <Flashcard />\r\n            <Flashcard />\r\n            <Flashcard />\r\n        </CardDeck>\r\n    );\r\n}\r\n\r\nexport default Deck;","import React from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\n\r\nclass LoginPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            validated: false\r\n        }\r\n    }\r\n\r\n    tryLoggingIn = (email, password) => {\r\n        fetch(\"/login\", {\r\n            body: JSON.stringify({ email: email, pass: password }),\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.text()).then(result => {\r\n            if (result == \"OK\") {\r\n                this.props.changeLoggedStatus();\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        this.setState({ validated: true });\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === true) {\r\n            const email = form.elements[0].value;\r\n            const password = form.elements[1].value;\r\n            this.tryLoggingIn(email, password);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"mt-3\">\r\n                <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\r\n                    <Form.Group controlId=\"formEmail\">\r\n                        <Form.Label>Email address:</Form.Label>\r\n                        <Form.Control required type=\"email\" placeholder=\"Enter email\" />\r\n                        <FormControl.Feedback type=\"valid\">Looks great!</FormControl.Feedback>\r\n                        <FormControl.Feedback type=\"invalid\">Please provide a proper email address</FormControl.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formPassword\">\r\n                        <Form.Label>Password:</Form.Label>\r\n                        <Form.Control required type=\"password\" placeholder=\"Password\"></Form.Control>\r\n                        <FormControl.Feedback type=\"valid\">Looks great!</FormControl.Feedback>\r\n                        <FormControl.Feedback type=\"invalid\">Password is required</FormControl.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"success\" type=\"submit\">Submit</Button>\r\n                </Form>\r\n                <h6 className=\"mt-2\">Don't have an account?</h6>\r\n                <a href=\"/signup\">Sign up</a>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\n\r\nclass SignUpPage extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            validated: false\r\n        }\r\n    }\r\n\r\n    sendNewUser = (nick, email, pass) => {\r\n        fetch(\"/signup\", {\r\n            body: JSON.stringify({ nick: nick, email: email, pass: pass }),\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => res.text()).then(data => {\r\n            if (data == \"OK\") {\r\n                window.location.replace(window.location.origin);\r\n            }\r\n        });\r\n    }\r\n\r\n    validateEmail = (nick, email, pass) => {\r\n        if (email == \"\") return;\r\n        fetch(\"/emailInUse\", {\r\n            body: JSON.stringify({ email: email.value }),\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.text()).then(response => {\r\n            if (response == \"OK\") {\r\n                this.sendNewUser(nick, email.value, pass);\r\n            } else {\r\n                email.setCustomValidity('Email address already in use');\r\n                email.reportValidity();\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        this.setState({ validated: true });\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const form = event.currentTarget;\r\n        const nick = form.elements[0];\r\n        const email = form.elements[1];\r\n        const pass = form.elements[2];\r\n        const checkbox = form.elements[3];\r\n\r\n        if (nick.checkValidity() && pass.checkValidity() && checkbox.checkValidity()) {\r\n            this.validateEmail(nick.value, email, pass.value);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"mt-3\">\r\n                <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\r\n                    <Form.Group controlId=\"formNickname\">\r\n                        <Form.Label>Nickname:</Form.Label>\r\n                        <Form.Control name=\"nickname\" required type=\"text\" placeholder=\"Nickname\" />\r\n                        <Form.Control.Feedback type=\"valid\">Looks great!</Form.Control.Feedback>\r\n                        <Form.Control.Feedback type=\"invalid\">Nickname is required</Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formEmail\">\r\n                        <Form.Label>Email address:</Form.Label>\r\n                        <Form.Control name=\"email\" required type=\"email\" placeholder=\"Enter email\" />\r\n                        <FormControl.Feedback type=\"valid\">Looks great!</FormControl.Feedback>\r\n                        <FormControl.Feedback id=\"emailStatus\" type=\"invalid\">Please input correct email address</FormControl.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formPassword\">\r\n                        <Form.Label>Password:</Form.Label>\r\n                        <Form.Control name=\"password\" required type=\"password\" placeholder=\"Password\"></Form.Control>\r\n                        <FormControl.Feedback type=\"valid\">Looks great!</FormControl.Feedback>\r\n                        <FormControl.Feedback type=\"invalid\">Password is required</FormControl.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formCheck\">\r\n                        <Form.Check>\r\n                            <Form.Check.Input required />\r\n                            <Form.Check.Label>Agree to terms of service</Form.Check.Label>\r\n                            <Form.Control.Feedback type=\"invalid\">You must agree before submitting</Form.Control.Feedback>\r\n                        </Form.Check>\r\n                    </Form.Group>\r\n                    <Button variant=\"success\" type=\"submit\">Submit</Button>\r\n                </Form>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUpPage;","import React from 'react';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nimport Header from './components/Header.js';\r\nimport Deck from './components/Deck.js';\r\nimport LoginPage from './components/LoginPage.js';\r\nimport SignUpPage from './components/SignUpPage.js';\r\n\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nfunction Routes(props) {\r\n    console.log(props.loggedStatus);\r\n    return (\r\n        <div className=\"App\">\r\n            <Header user={props.user} loggedStatus={props.loggedStatus} changeLoggedStatus={props.changeLoggedStatus} />\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Container>\r\n                        <Row className=\"mt-3\">\r\n                            <Deck />\r\n                        </Row>\r\n                        <Row className=\"mt-3\">\r\n                            <Deck />\r\n                        </Row>\r\n                    </Container>\r\n                </Route>\r\n                <Route path=\"/about\">\r\n                    <h1>About test</h1>\r\n                </Route>\r\n                <Route path=\"/dashboard\">\r\n                    <h1>Dashboard test</h1>\r\n                </Route>\r\n                <Route path=\"/faq\">\r\n                    <h1>FAQ test</h1>\r\n                </Route>\r\n                <Route path=\"/login\">\r\n                    {props.loggedStatus ? <Redirect to=\"/\" /> : <LoginPage changeLoggedStatus={props.changeLoggedStatus} />}\r\n                </Route>\r\n                <Route path=\"/signup\">\r\n                    {props.loggedStatus ? <Redirect to=\"/\" /> : <SignUpPage />}\r\n                </Route>\r\n                <Route>\r\n                    <h1>Bad page</h1>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;","import { React, Component } from 'react';\r\nimport './App.css';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport Routes from './Routes';\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isLoggedIn: false,\r\n      username: \"Diego\"\r\n    }\r\n  }\r\n\r\n  checkCookie() {\r\n    fetch('/isLoggedIn').then(res => res.text()).then(result => {\r\n      if (result == \"true\") {\r\n        this.setState({ isLoggedIn: true });\r\n      } else {\r\n        this.setState({ isLoggedIn: false });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkCookie();\r\n    console.log(`mounted`);\r\n    setInterval(() => this.checkCookie(), 4000);\r\n  }\r\n\r\n  changeLoggedStatus = () => {\r\n    this.setState((prevState) => ({\r\n      isLoggedIn: !prevState.isLoggedIn\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Routes user={this.state.username} loggedStatus={this.state.isLoggedIn} changeLoggedStatus={this.changeLoggedStatus} />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}